AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SheGlow Concierge - Enhanced serverless backend with security & monitoring

Globals:
  Function:
    Runtime: python3.11
    Timeout: 30
    MemorySize: 256
    Tracing: Active
    Environment:
      Variables:
        TABLE_USERS: !Ref UsersTable
        TABLE_ROUTINES: !Ref RoutinesTable
        # CRITICAL UPDATE: New Bedrock model ID
        BEDROCK_MODEL_ID: anthropic.claude-3-5-sonnet-20241022-v2:0
        LOG_LEVEL: INFO
        REMINDER_TOPIC_ARN: !Ref ReminderTopic
  Api:
    TracingEnabled: true

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Deployment stage

Resources:
  ### Enhanced DynamoDB with GSI
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "sheglow-users-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  RoutinesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "sheglow-routines-${AWS::StackName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: routine_id
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: routine_id
          KeyType: RANGE
      # Enhanced: Add GSI for better querying
      GlobalSecondaryIndexes:
        - IndexName: created-at-index
          KeySchema:
            - AttributeName: user_id
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      # Enhanced: TTL for cost optimization
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  ### Enhanced API with rate limiting
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v1
      # Enhanced: Rate limiting
      ThrottleConfig:
        BurstLimit: 1000
        RateLimit: 500
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        AllowHeaders:
          - Content-Type
          - Authorization
          - X-Api-Key
        AllowOrigins:
          - "*"

  ### Lambda Functions with enhanced policies
  RecommendFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/recommend_routine/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref RoutinesTable
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
                - bedrock:InvokeModelWithResponseStream
              Resource: "*"
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
      Events:
        Recommend:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /recommend
            Method: POST

  RoutinesApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/routines_api/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref RoutinesTable
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
      Events:
        GetRoutines:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /routines
            Method: GET
        PostRoutine:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /routines
            Method: POST
        DeleteRoutine:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /routines/{routine_id}
            Method: DELETE
        HealthCheck:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /health
            Method: GET

  RemindersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/reminders/
      Handler: app.lambda_handler
      Environment:
        Variables:
          REMINDER_TOPIC_ARN: !Ref ReminderTopic
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref RoutinesTable
        - Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref ReminderTopic
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
      Events:
        DailyRule:
          Type: Schedule
          Properties:
            Schedule: cron(0 12 * * ? *)
            Name: !Sub "sheglow-daily-reminders-${AWS::StackName}"
            Description: Trigger daily skincare reminders
            Enabled: true

  CalendarIcsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/calendar_ics/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref RoutinesTable
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
      Events:
        GetIcs:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /calendar/ics
            Method: GET

  ### SNS Topic for reminders
  ReminderTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "sheglow-reminders-${AWS::StackName}"
      DisplayName: "SheGlow Skincare Reminders"

  ### Enhanced: CloudWatch Dashboard for monitoring
  MonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "SheGlow-${AWS::StackName}"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${RecommendFunction}"],
                  ["AWS/Lambda", "Errors", "FunctionName", "${RecommendFunction}"],
                  ["AWS/Lambda", "Invocations", "FunctionName", "${RecommendFunction}"]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "Recommend Function Metrics"
              }
            },
            {
              "type": "metric",
              "properties": {
                "metrics": [
                  ["AWS/DynamoDB", "ConsumedReadCapacityUnits", "TableName", "${RoutinesTable}"],
                  ["AWS/DynamoDB", "ConsumedWriteCapacityUnits", "TableName", "${RoutinesTable}"]
                ],
                "period": 300,
                "stat": "Sum",
                "region": "${AWS::Region}",
                "title": "DynamoDB Usage"
              }
            }
          ]
        }

Outputs:
  ApiEndpoint:
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1"
    Description: Base URL for SheGlow API
    Export:
      Name: !Sub "${AWS::StackName}-ApiEndpoint"

  ReminderTopicArn:
    Value: !Ref ReminderTopic
    Description: SNS Topic ARN for reminders - subscribe email/SMS here
    Export:
      Name: !Sub "${AWS::StackName}-ReminderTopicArn"

  DashboardURL:
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=SheGlow-${AWS::StackName}"
    Description: CloudWatch Dashboard for monitoring

  ApiDocumentation:
    Value: !Sub |
      API Endpoints:
      - POST ${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1/recommend
      - GET ${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1/routines?user_id=<user_id>
      - POST ${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1/routines
      - DELETE ${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1/routines/<routine_id>?user_id=<user_id>
      - GET ${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1/calendar/ics?user_id=<user_id>
      - GET ${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1/health
    Description: Available API endpoints
