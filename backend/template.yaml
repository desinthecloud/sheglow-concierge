AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SheGlow Concierge — Week 3 (Auth, Profiles, Reminders, Calendar)

Globals:
  Function:
    Runtime: python3.12
    Timeout: 20
    MemorySize: 256
    Architectures: [x86_64]
    Environment:
      Variables:
        USERS_TABLE: !Ref UsersTable
        ROUTINES_TABLE: !Ref RoutinesTable
        REMINDER_TOPIC_ARN: !Ref ReminderTopic
        SCHEDULER_ROLE_ARN: !GetAtt SchedulerToSnsRole.Arn

Resources:
  # ---------- Cognito ----------
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # (Optional) remove name to avoid collisions across envs
      UserPoolName: sheglow-user-pool
      UsernameAttributes: [email]
      AutoVerifiedAttributes: [email]
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      # (Optional) remove name to avoid collisions across envs
      ClientName: sheglow-client
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH

  # ---------- DynamoDB ----------
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH

  RoutinesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: routineId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: routineId
          KeyType: RANGE

  # ---------- SNS ----------
  ReminderTopic:
    Type: AWS::SNS::Topic
    # (No explicit TopicName to avoid collisions)

  # ---------- EventBridge Scheduler → SNS role ----------
  SchedulerToSnsRole:
    Type: AWS::IAM::Role
    Properties:
      # (No explicit RoleName to avoid CAPABILITY_NAMED_IAM, use CAPABILITY_IAM instead)
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: publish-to-sns
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: sns:Publish
                Resource: !Ref ReminderTopic

  # ---------- API (HTTP API) ----------
  SheGlowApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: prod
      Auth:
        Authorizers:
          CognitoAuthorizer:
            JwtConfiguration:
              issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}"
              audience:
                - !Ref UserPoolClient
            IdentitySource: "$request.header.Authorization"
        DefaultAuthorizer: CognitoAuthorizer
      CorsConfiguration:
        AllowMethods: [GET, POST, PUT, DELETE, OPTIONS]
        AllowHeaders: [Content-Type, Authorization]
        AllowOrigins: ['*']

  # ---------- Lambdas ----------
  UsersFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: users_handler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        GetMe:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /users/me
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
        PutMe:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /users/me
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer

  RoutinesFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: routines_handler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref RoutinesTable
        - Statement:
            - Effect: Allow
              Action:
                - scheduler:CreateSchedule
                - scheduler:DeleteSchedule
                - scheduler:GetSchedule
                - scheduler:ListSchedules
              Resource: !Sub "arn:aws:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: !GetAtt SchedulerToSnsRole.Arn
      Events:
        PostRoutine:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /routines
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
        ListRoutines:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /routines
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
        PutRoutine:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /routines/{routineId}
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer
        DeleteRoutine:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /routines/{routineId}
            Method: DELETE
            Auth:
              Authorizer: CognitoAuthorizer

  SubscribeFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: subscribe_handler.handler
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - sns:Subscribe
                - sns:SetSubscriptionAttributes
              Resource: !Ref ReminderTopic
      Events:
        SubscribeEmail:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /subscribe/email
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  IcsFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: ics_handler.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref RoutinesTable
      Events:
        GetIcs:
          Type: HttpApi
          Properties:
            ApiId: !Ref SheGlowApi
            Path: /calendar/ics
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

Outputs:
  ApiUrl:
    Value: !Sub "https://${SheGlowApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
    Description: Base URL for the SheGlow API
  UserPoolId:
    Value: !Ref UserPool
  UserPoolClientId:
    Value: !Ref UserPoolClient
  ReminderTopicArn:
    Value: !Ref ReminderTopic